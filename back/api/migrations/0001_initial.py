# Generated by Django 4.2.19 on 2025-03-07 19:00

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Ожидание'), ('confirmed', 'Подтверждено'), ('cancelled', 'Отменено')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Название города', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Название страны', max_length=100, unique=True)),
                ('Continent', models.CharField(help_text='Название контиента', max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('star', models.PositiveSmallIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], help_text='Оценка тура (1-5)')),
                ('text', models.TextField(help_text='Текст отзыва')),
                ('helpful', models.PositiveIntegerField(default=0, help_text="Количество отметок 'Полезно'")),
                ('not_helpful', models.PositiveIntegerField(default=0, help_text="Количество отметок 'Не полезно'")),
            ],
        ),
        migrations.CreateModel(
            name='Tour',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Название тура', max_length=255)),
                ('review_report', models.JSONField(default=dict, help_text='Отчет по отзывам')),
                ('duration', models.TextField(help_text='Продолжительность тура')),
                ('description', models.TextField(help_text='Описание тура')),
                ('events', models.JSONField(default=list, help_text='Список мероприятий')),
                ('highlights', models.JSONField(default=list, help_text='Ключевые моменты тура')),
                ('map_image', models.ImageField(blank=True, help_text='Карта тура', null=True, upload_to='maps/')),
                ('map_links', models.JSONField(default=dict, help_text='Ссылки на карты')),
                ('city', models.ForeignKey(help_text='Город тура', on_delete=django.db.models.deletion.CASCADE, related_name='tours', to='api.city')),
                ('country', models.ForeignKey(help_text='Страна тура', on_delete=django.db.models.deletion.CASCADE, related_name='tours', to='api.country')),
            ],
        ),
        migrations.CreateModel(
            name='UserForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Имя пользователя', max_length=255)),
                ('email', models.EmailField(help_text='Электронная почта пользователя', max_length=254)),
                ('phone', models.CharField(help_text='Телефон пользователя', max_length=20)),
                ('comment', models.TextField(blank=True, help_text='Комментарий пользователя', null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processed', 'Processed')], default='pending', help_text='Статус заявки', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_profile', models.TextField(blank=True, help_text='Локация пользователя', null=True)),
                ('full_name', models.CharField(help_text='Полное имя пользователя', max_length=255)),
                ('cover_photo', models.ImageField(blank=True, help_text='Обложка профиля', null=True, upload_to='users/covers/')),
                ('profile_pic', models.ImageField(blank=True, help_text='Фото профиля', null=True, upload_to='users/profiles/')),
                ('booking_history', models.ManyToManyField(blank=True, help_text='История бронирований пользователя', related_name='booked_users', to='api.tour')),
                ('favourites', models.ManyToManyField(blank=True, help_text='Избранные туры пользователя', related_name='favourite_users', to='api.tour')),
                ('user', models.OneToOneField(help_text='Связанный пользователь', on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TourImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(help_text='Изображение тура', upload_to='tours/')),
                ('tour', models.ForeignKey(help_text='Связанный тур', on_delete=django.db.models.deletion.CASCADE, to='api.tour')),
            ],
        ),
        migrations.CreateModel(
            name='ReviewImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(help_text='Изображение отзыва', upload_to='reviews/')),
                ('review', models.ForeignKey(help_text='Связанный отзыв', on_delete=django.db.models.deletion.CASCADE, to='api.review')),
            ],
        ),
        migrations.AddField(
            model_name='review',
            name='tour',
            field=models.ForeignKey(help_text='Тур, на который оставлен отзыв', on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='api.tour'),
        ),
        migrations.AddField(
            model_name='review',
            name='user',
            field=models.ForeignKey(help_text='Пользователь, оставивший отзыв', on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.IntegerField()),
                ('currency', models.CharField(default='KZT', max_length=3)),
                ('order_id', models.CharField(max_length=100, unique=True)),
                ('payment_status', models.CharField(choices=[('pending', 'Ожидание'), ('paid', 'Оплачено'), ('failed', 'Ошибка')], default='pending', max_length=20)),
                ('payment_url', models.URLField(blank=True, null=True)),
                ('transaction_id', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.booking')),
            ],
        ),
        migrations.AddField(
            model_name='city',
            name='country',
            field=models.ForeignKey(help_text='Страна, к которой относится город', on_delete=django.db.models.deletion.CASCADE, related_name='cities', to='api.country'),
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('tour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.tour')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='booking',
            name='tour',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.tour'),
        ),
        migrations.AddField(
            model_name='booking',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
